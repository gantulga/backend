# Generated by Django 3.0.2 on 2020-06-20 06:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payment_app', '0001_initial'),
        ('structure_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('financial_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Basic_asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=255, null=True)),
                ('real_price', models.DecimalField(decimal_places=2, max_digits=14)),
                ('rised_price', models.DecimalField(decimal_places=2, max_digits=14)),
                ('code', models.CharField(max_length=30)),
                ('photo', models.ImageField(upload_to='asset_images')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='basic_asset_createdby', to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='basic_assets', to='structure_app.Division')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='basic_asset_modifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=255, null=True)),
                ('unit_size', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('size', models.PositiveIntegerField()),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='product_app.Commodity')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ingredient_createdby', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('store_info', models.TextField(max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='store_createdby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Size_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('abbreviation', models.CharField(max_length=10)),
                ('description', models.TextField(max_length=255)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='size_type_createdby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=255)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='product_category_createdby', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='child_categories', to='product_app.Product_category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=255, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=14)),
                ('categories', models.ManyToManyField(db_table='product_app_product_categories', related_name='products', to='product_app.Product_category')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='client_products', to='structure_app.Client')),
                ('commodities', models.ManyToManyField(through='product_app.Ingredient', to='product_app.Commodity')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='product_createdby', to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='division_products', to='structure_app.Division')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item_transfer_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_transfer_type_createdby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item_transfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('product_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('is_confirmed', models.BooleanField(default=0)),
                ('recieved_ebarimt', models.BooleanField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('unit_size', models.PositiveIntegerField(blank=True, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('size', models.PositiveIntegerField(blank=True, null=True)),
                ('budget', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='bought_item_transfers', to='financial_app.Budget')),
                ('commodity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='transfers', to='product_app.Commodity')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_transfer_confirmed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_transfer_createdby', to=settings.AUTH_USER_MODEL)),
                ('fr_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sending_item_transfers', to='structure_app.Client')),
                ('fr_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sending_item_transfers', to='structure_app.Division')),
                ('fr_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sending_item_transfers', to=settings.AUTH_USER_MODEL)),
                ('item_transfer_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='item_transfers', to='product_app.Item_transfer_type')),
                ('order_detial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_transfers', to='payment_app.Order_detial')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='transfers', to='product_app.Product')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bought_item_transfers', to='product_app.Store')),
                ('to_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='coming_item_transfers', to='structure_app.Client')),
                ('to_division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='coming_item_transfers', to='structure_app.Division')),
                ('to_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ingredients_transfer', to='product_app.Product')),
                ('to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='coming_item_transfers', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_transfer_modifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item_balance_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('size', models.PositiveIntegerField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_logs', to='structure_app.Client')),
                ('commodity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_logs', to='product_app.Commodity')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_log_createdby', to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_logs', to='structure_app.Division')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_logs', to='product_app.Product')),
                ('shift_work', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_logs', to='structure_app.Shift_work')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_log_modifiedby', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item_balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('size', models.PositiveIntegerField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balances', to='structure_app.Client')),
                ('commodity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='balances', to='product_app.Commodity')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_createdby', to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balances', to='structure_app.Division')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='balances', to='product_app.Product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balance_modifiedby', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='item_balances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='ingredient',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='product_app.Product'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='size_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ingredients', to='product_app.Size_type'),
        ),
        migrations.CreateModel(
            name='Commodity_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=255)),
                ('Division', models.ManyToManyField(db_table='product_app_division_commodity_categories', to='structure_app.Division')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='commodity_category_createdby', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='child_categories', to='product_app.Commodity_category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='commodity',
            name='categories',
            field=models.ManyToManyField(db_table='product_app_commodity_categories', related_name='commodities', to='product_app.Commodity_category'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='commodity_createdby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commodity',
            name='size_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='commodities', to='product_app.Size_type'),
        ),
        migrations.CreateModel(
            name='broken_item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('size', models.PositiveIntegerField()),
                ('description', models.TextField(max_length=255, null=True)),
                ('damage_paid', models.BooleanField(default=0)),
                ('money_transfer_status', models.CharField(default='тодорхойгүй', max_length=30)),
                ('basic_asset', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='broken_basic_assets', to='product_app.Basic_asset')),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='broken_commodities', to='product_app.Commodity')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='broken_item_createdby', to=settings.AUTH_USER_MODEL)),
                ('money_transfer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='broken_items_money', to='financial_app.Money_transfer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='broken_products', to='product_app.Product')),
                ('size_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='broken_items', to='product_app.Size_type')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='broken_item_modifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Basic_asset_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('counted_day', models.DateField()),
                ('prev_quantity', models.PositiveIntegerField()),
                ('quantity_balance', models.PositiveIntegerField()),
                ('quantity_increased', models.PositiveIntegerField()),
                ('quantity_deducted', models.PositiveIntegerField()),
                ('information', models.TextField(null=True)),
                ('controll_confirmed', models.BooleanField(default=0)),
                ('basic_asset', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='counts', to='product_app.Basic_asset')),
                ('controlled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='controlled_by', to=settings.AUTH_USER_MODEL)),
                ('counted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='counted_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='basic_asset_count_createdby', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='basic_asset_count_modifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='ingredient',
            unique_together={('commodity', 'product')},
        ),
    ]
